module.exports.config = {
    name: "married2",
    version: "3.1.1",
    hasPermssion: 0,
    credits: "‚ÄîÕüÕüÕûÕûùêÇùêòùêÅùêÑùêë ‚ò¢Ô∏è_ñ£ò -ùêÅùêéùêì ‚ö†Ô∏è ùëªùë¨ùë®ùë¥_ ‚ò¢Ô∏è",
    description: "married",
    commandCategory: "img",
    usages: "[@mention]",
    cooldowns: 5,
    dependencies: {
        "axios": "",
        "fs-extra": "",
        "path": "",
        "jimp": ""
    }
};

module.exports.onLoad = async () => {
    const { resolve } = global.nodemodule["path"];
    const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
    const { downloadFile } = global.utils;
    const dirMaterial = __dirname + `/cache/canvas/`;
    const path = resolve(__dirname, 'cache/canvas', 'marriedv3.png');
    if (!existsSync(dirMaterial)) mkdirSync(dirMaterial, { recursive: true });
    if (!existsSync(path)) await downloadFile("https://i.ibb.co/5TwSHpP/Guardian-Place-full-1484178.jpg", path);
};

async function makeImage({ one, two }) {
    const fs = global.nodemodule["fs-extra"];
    const path = global.nodemodule["path"];
    const axios = global.nodemodule["axios"];
    const jimp = global.nodemodule["jimp"];
    const __root = path.resolve(__dirname, "cache", "canvas");

    let married_img = await jimp.read(__root + "/marriedv3.png");
    let pathImg = __root + `/married_${one}_${two}.png`;
    let avatarOne = __root + `/avt_${one}.png`;
    let avatarTwo = __root + `/avt_${two}.png`;

    let getAvatarOne = (await axios.get(`https://graph.facebook.com/${one}/picture?width=512&height=512&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`, { responseType: 'arraybuffer' })).data;
    fs.writeFileSync(avatarOne, Buffer.from(getAvatarOne, 'utf-8'));

    let getAvatarTwo = (await axios.get(`https://graph.facebook.com/${two}/picture?width=512&height=512&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`, { responseType: 'arraybuffer' })).data;
    fs.writeFileSync(avatarTwo, Buffer.from(getAvatarTwo, 'utf-8'));

    let circleOne = await jimp.read(await circle(avatarOne));
    let circleTwo = await jimp.read(await circle(avatarTwo));
    married_img.composite(circleOne.resize(90, 90), 250, 1).composite(circleTwo.resize(90, 90), 350, 70);

    let raw = await married_img.getBufferAsync("image/png");

    fs.writeFileSync(pathImg, raw);
    fs.unlinkSync(avatarOne);
    fs.unlinkSync(avatarTwo);

    return pathImg;
}

async function circle(image) {
    const jimp = require("jimp");
    image = await jimp.read(image);
    image.circle();
    return await image.getBufferAsync("image/png");
}

module.exports.run = async function ({ event, api, args }) {
    const fs = global.nodemodule["fs-extra"];
    const { threadID, messageID, senderID } = event;
    const mention = Object.keys(event.mentions || {});

    const captions = [
        "üíü·É¶ŸÄŸÄüíò‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ, ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶∏‡¶¨‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶°‡¶º ‡¶â‡¶™‡¶π‡¶æ‡¶∞‡•§üíò·É¶ŸÄŸÄüíü",
        "‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ö‡ßã‡¶ñ‡ßá ‡¶§‡¶æ‡¶ï‡¶æ‡¶≤‡ßá‡¶á ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶™‡ßÉ‡¶•‡¶ø‡¶¨‡ßÄ‡¶∞ ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶Ü‡¶Æ‡¶ø ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶≠‡ßÅ‡¶≤‡ßá ‡¶Ø‡¶æ‡¶á!üíö‚ù§Ô∏è‚Äçü©πüíû",
        "‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá‡¶∞ ‡¶∏‡ßá‡¶á ‡¶ó‡¶≤‡ßç‡¶™, ‡¶Ø‡ßá‡¶á ‡¶ó‡¶≤‡ßç‡¶™ ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡ßã‡¶® ‡¶¶‡¶ø‡¶® ‡¶∂‡ßá‡¶∑ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á ‡¶®‡¶æ!ü•∞üòòüåª",
        "I am so lucky person! ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶è‡¶ï‡¶ú‡¶® ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ‡ßü‡ßÄ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶® ‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡ßá ‡¶™‡ßá‡ßü‡ßá!‚ù§Ô∏è‚Äçü©πüíûüå∫",
        "I feel complete in my life, ‡¶Ø‡¶ñ‡¶® ‡¶≠‡¶æ‡¶¨‡¶ø ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶è‡¶ï‡¶ü‡¶æ ‡¶≤‡¶ï‡ßç‡¶∑‡ßç‡¶Æ‡ßÄ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶® ‡¶∏‡¶ô‡ßç‡¶ó‡ßÄ!üíù",
        "‡¶§‡ßã‡¶Æ‡¶æ‡¶§‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶§‡ßã‡¶Æ‡¶æ‡¶§‡ßá‡¶á ‡¶∂‡ßá‡¶∑, ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶ó‡¶≤‡ßç‡¶™ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá‡¶á ‡¶∂‡ßá‡¶∑!üå∫",
        "‡¶Ü‡¶Æ‡¶ø ‡¶õ‡¶ø‡¶≤‡¶æ‡¶Æ, ‡¶Ü‡¶Æ‡¶ø ‡¶Ü‡¶õ‡¶ø ‡¶Ü‡¶Æ‡¶ø ‡¶•‡¶æ‡¶ï‡¶¨‡ßã, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞‡¶á ‡¶ú‡¶®‡ßç‡¶Ø!üíû",
        "‚ù•üíô‚ïê‚ïê·É¶‚ïê‚ïê‚ù•‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ú‡¶°‡¶º‡¶ø‡¶Ø‡¶º‡ßá ‡¶ß‡¶∞‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶ñ ‡¶è‡¶á ‡¶™‡ßÉ‡¶•‡¶ø‡¶¨‡ßÄ‡¶∞ ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶¶‡¶ø‡¶Ø‡¶º‡ßá ‡¶ï‡ßá‡¶®‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º ‡¶®‡¶æ ‡¶™‡ßç‡¶∞‡¶ø‡¶Ø‡¶º‡¶§‡¶Æ‡¶æ‡•§‚ïê‚ïê·É¶‚ïê‚ïê‚ù•üíô‚ù•",
        "üåª‚Ä¢‚îÅ‡¶è‡¶§‡ßã ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶ø ‡¶è‡¶§‡ßã ‡¶Ø‡¶æ‡¶∞‡ßá ‡¶ö‡¶æ‡¶á‚Ä¶‡¶Æ‡¶®‡ßá ‡¶π‡¶Ø‡¶º ‡¶®‡¶æ‡¶§‡ßã ‡¶∏‡ßá ‡¶Ø‡ßá ‡¶ï‡¶æ‡¶õ‡ßá ‡¶®‡¶æ‡¶á!üåª‚Ä¢‚îÅ",
        "üåº‚ïê‚ïê·É¶‚ïê‚ïê‚ù•‡¶ö‡¶≤‡¶æ‡¶∞ ‡¶™‡¶•‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶π‡¶æ‡¶§‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶π‡¶æ‡¶§‡¶ü‡¶æ ‡¶ó‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¶‡¶ø‡¶ì, ‡¶π‡¶æ‡¶Å‡¶ü‡¶§‡ßá ‡¶ó‡¶ø‡¶Ø‡¶º‡ßá ‡¶π‡ßã‡¶Å‡¶ö‡¶ü ‡¶ñ‡ßá‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶Ø‡¶º ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∏‡¶æ‡¶Æ‡¶≤‡ßá ‡¶®‡¶ø‡¶ì‡•§üåº‚ïê‚ïê·É¶‚ïê‚ïê‚ù•",
        "üí†‚ú¶üíü‚ú¶üí†‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶®‡ßá ‡¶π‡¶Ø‡¶º ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡¶®‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶®‡¶∞‡¶Æ ‡¶ú‡¶Æ‡¶ø‡¶ü‡¶æ‡¶Ø‡¶º, ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¨‡¶∏‡¶¨‡¶æ‡¶∏‡•§üí†‚ú¶üíü‚ú¶üí†",
        "‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶ú‡ßÄ‡¶¨‡¶®‡ßá ‡¶∏‡ßÅ‡¶ñ-‡¶∂‡¶æ‡¶®‡ßç‡¶§‡¶ø ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá ‡¶®‡¶æ, ‡¶Ü‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ö‡¶æ‡¶á!üåº"
    ];

    if (!mention[0]) return api.sendMessage("Please mention 1 person.", threadID, messageID);

    const one = senderID, two = mention[0];
    const caption = captions[Math.floor(Math.random() * captions.length)];

    try {
        const path = await makeImage({ one, two });
        return api.sendMessage({
            body: caption,
            attachment: fs.createReadStream(path)
        }, threadID, () => fs.unlinkSync(path), messageID);
    } catch (err) {
        return api.sendMessage("‡¶õ‡¶¨‡¶ø ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§", threadID, messageID);
    }
};